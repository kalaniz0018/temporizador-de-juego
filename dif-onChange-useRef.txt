Diferencia entre usar el onChange y el useRef: 
la diferencia entre los dos es que  con el onChange  para actualizar tiene que 
llamar a la funcion  handleChange y dsp lo vincula el elemento con el DOM  y con el useRef lo actualiza 
directo desde el DOM?
En el primer método, utilizando useState con onChange, actualizas el estado (enteredPlayerName) mediante 
la función handleChange, que se activa cada vez que el usuario escribe algo en el campo de entrada. Este 
enfoque implica una actualización del estado de React cada vez que cambia el valor del campo de entrada.

En el segundo método, utilizando useRef con ref, accedes directamente al valor del campo de entrada a 
través de la referencia (playerName.current.value). No necesitas mantener un estado separado para el valor 
del campo de entrada; simplemente accedes a su valor directamente desde el DOM. Esto significa que no hay 
una actualización del estado de React cuando el valor del campo de entrada cambia; accedes directamente al 
valor del DOM.
------------------------------------------------------------------------------
METODO CON EL onChange

import React, { useState} from "react";

const Player = () => {
  const [enteredPlayerName, setEnteredPlayerName] = useState("");
  const [submitted, setSubmitted] = useState(false);

  function handleChange(event) {
    setSubmitted(false);
    setEnteredPlayerName(event.target.value);
  }
  function handleClick() {
    setSubmitted(true);
  }

  return (
    <section id="player">
      <h2>Welcome {submitted ? enteredPlayerName : "unknown entity"}</h2>
      <p>
        <input type="text" onChange={handleChange} value={enteredPlayerName} />
        <button onClick={handleClick}>Set Name</button>
      </p>
    </section>
  );
};

export default Player;
--------------------------------------------------------------------------------------------
METODO CON EL useRef

import React, { useState, useRef } from "react";

const Player = () => {
  const playerName = useRef();

  const [enteredPlayerName, setEnteredPlayerName] = useState(null);

  function handleClick() {
    setEnteredPlayerName(playerName.current.value);
  }

  return (
    <section id="player">
      <h2>Welcome {enteredPlayerName ?? "unknown entity"}</h2>
      <h2>
        Welcome {enteredPlayerName ? enteredPlayerName : "unknown entity"}
      </h2>
      <p>
        <input type="text" ref={playerName} />
        <button onClick={handleClick}>Set Name</button>
      </p>
    </section>
  );
};

export default Player;
